jobs:

  - job: '{{ project_name }}'
    pool:
      vmImage: 'Ubuntu-16.04'
    strategy:
      matrix:
        Python37:
          python.version: '3.7'
      maxParallel: 1

    variables:
      PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: '$(python.version)'
          architecture: 'x64'

      - script: |
          curl -L https://github.com/lihaoyi/sjsonnet/releases/download/0.2.4/sjsonnet.jar > sjsonnet.jar
          chmod +x sjsonnet.jar
          sudo mv ./sjsonnet.jar /usr/local/bin/jsonnet
          which jsonnet
        displayName: 'Install jsonnet'
      - task: Cache@2
        inputs:
          key: 'python | "$(Agent.OS)" | requirements.txt'
          restoreKeys: |
            python | "$(Agent.OS)"
            python
          path: $(PIP_CACHE_DIR)
        displayName: Cache pip packages

      - script: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        displayName: 'Install dependencies'

      - script: |
          dbx deploy \
            --job-name=batch \
            --env=test
        displayName: 'Deploy batch job'

      - script: |
          dbx launch \
            --job-name=batch \
            --env=test
        env:
          COMMIT_ID: $(Build.SourceVersion)
        displayName: 'Launch batch job'

      - task: PublishTestResults@2
        condition: succeededOrFailed()
        inputs:
          testResultsFiles: '**/test-*.xml'
          testRunTitle: 'Publish test results'

      - task: PublishCodeCoverageResults@1
        inputs:
          codeCoverageTool: Cobertura
          summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
          reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
